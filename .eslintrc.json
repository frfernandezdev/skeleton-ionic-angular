{
  "root": true,
  "ignorePatterns": ["cypress/**/*", "*.spec.ts"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json", "e2e/tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/ng-cli-compat",
        "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "rules": {
        "@angular-eslint/component-class-suffix": [
          "error",
          {
            "suffixes": ["Page", "Component"]
          }
        ],
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ],
				"@typescript-eslint/explicit-function-return-type": [
					"error", 
					{
						"allowExpressions": true,
						"allowHigherOrderFunctions": true,
						"allowDirectConstAssertionInArrowFunctions": true,
						"allowConciseArrowFunctionExpressionsStartingWithVoid": true
					}
				],
				"@typescript-eslint/adjacent-overload-signatures": "error",
				"@typescript-eslint/array-type": ["error", {"default": "array-simple"}],
				"@typescript-eslint/explicit-member-accessibility": ["error", { "accessibility": "explicit" }],
				"@typescript-eslint/consistent-indexed-object-style": "error",
				"@typescript-eslint/consistent-type-assertions": [
					"error", 
					{ 
						"assertionStyle": "as",
						"objectLiteralTypeAssertions": "allow-as-parameter"
					}
				],
				"@typescript-eslint/consistent-type-imports": [
					"error", 
					{
						"prefer": "type-imports"
					}
				],
				"@typescript-eslint/default-param-last": ["error"],
				"@typescript-eslint/func-call-spacing": ["error"],
				"@typescript-eslint/indent": ["error", "tab"],
				"@typescript-eslint/keyword-spacing": ["error"],
				"@typescript-eslint/lines-between-class-members": ["error"],
				"@typescript-eslint/member-delimiter-style": ["error"],
				"@typescript-eslint/no-array-constructor": ["error"],
				"@typescript-eslint/no-confusing-non-null-assertion": ["error"],
				"@typescript-eslint/no-confusing-void-expression": [
					"error", 
					{ 
						"ignoreArrowShorthand": true, 
						"ignoreVoidOperator": true
					}
				],
				"@typescript-eslint/no-dupe-class-members": ["error"],
				"@typescript-eslint/no-duplicate-imports": ["error"],
				"@typescript-eslint/no-empty-function": [
					"error", 
					{
						"allow": ["decoratedFunctions", "protected-constructors", "private-constructors"]
					}
				], 
				"@typescript-eslint/no-empty-interface": [
					"error",
					{
						"allowSingleExtends": false
					}
				],
				"@typescript-eslint/no-extra-non-null-assertion": "error",
				"@typescript-eslint/no-extra-parens": ["error"],
				"@typescript-eslint/no-extra-semi": ["error"],
				"@typescript-eslint/no-floating-promises": ["error"],
				"@typescript-eslint/no-misused-promises": [
					"error",
					{
						"checksVoidReturn": false
					}
				],
				"@typescript-eslint/no-for-in-array": "error",
				"@typescript-eslint/no-implied-eval": ["error"],
				"@typescript-eslint/no-invalid-void-type": ["error"],
				"@typescript-eslint/no-loop-func": ["error"],
				"@typescript-eslint/no-misused-new": "error",
				"@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
				"@typescript-eslint/naming-convention": [
					"error",
					{
						"selector": "default",
						"format": ["strictCamelCase"],
						"leadingUnderscore": "forbid"
					},
					{
						"selector": "enumMember",
						"format": ["UPPER_CASE"]
					},
					{
						"selector": ["class", "interface", "enum"], 
						"format": ["StrictPascalCase"]
					}
				]
			}
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    }
  ]
}
